#JWT秘钥
hj.secrity.jwt.secret=7786df7fc3a34e26a61c034d5ec8245d
#jwt生命周期，单位分钟
hj.secrity.jwt.ttl=60
#用于服务内部jwt刷新周期，单位分钟。
hj.secrity.jwt.reload=5
#关闭统一鉴权
hj.secrity.disable=true

#开启强制停机
endpoints.shutdown.enabled=true
#开启优雅停机
endpoints.shutdown.graceful.enabled=true
#关闭验证，已经有了本地token验证
management.security.enabled=false
#等待${wait}秒后，执行关闭动作。
endpoints.shutdown.graceful.wait=1
#停止容器连接池超时时间，单位秒
endpoints.shutdown.graceful.timeout=30


#######Eureka实例配置#######
#服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除
#注意，EurekaServer一定要设置eureka.server.eviction-interval-timer-in-ms否则这个配置无效，这个配置一般为服务刷新时间配置的三倍
#如果该值太大，则很可能将流量转发过去的时候，该instance已经不存活了。
#如果该值设置太小了，则instance则很可能因为临时的网络抖动而被摘除掉。
#该值至少应该大于leaseRenewalIntervalInSeconds
#默认90s
eureka.instance.lease-expiration-duration-in-seconds=4
#服务刷新时间配置，每隔这个时间会主动心跳一次
#leaseRenewalIntervalInSeconds，表示eureka client发送心跳给server端的频率。
#如果在leaseExpirationDurationInSeconds后，server端没有收到client的心跳，则将摘除该instance。
#除此之外，如果该instance实现了HealthCheckCallback，并决定让自己unavailable的话，则该instance也不会接收到流量。
#默认30s
eureka.instance.lease-renewal-interval-in-seconds=2
#eureka匹配真是ip而不是hostname
eureka.instance.preferIpAddress=true
#eureka实例值，默认为：主机名：应用名：应用端口，${spring.cloud.client.hostname}:${spring.application.name}:${server.port}
eureka.instance.instance-id=${spring.cloud.client.ipAddress}:${server.port}



#######Eureka客户端配置

#eureka client刷新本地缓存时间
#默认30s
eureka.client.registryFetchIntervalSeconds=1
#最初复制实例信息到eureka服务器所需的时间
eureka.client.initial-instance-info-replication-interval-seconds=0
#复制实例变化信息到eureka服务器所需要的时间间隔
eureka.client.instance-info-replication-interval-seconds=1
#询问Eureka服务url信息变化的时间间隔
eureka.client.eurekaServiceUrlPollIntervalSeconds=60


#覆盖本地属性
spring.cloud.config.overrideNone=true

###ribbon设置###

#ribbon超时设置
ribbon.ReadTimeout=30000
ribbon.ConnectTimeout=30000
#ribbon刷新时间
#默认30s
ribbon.ServerListRefreshInterval=1000
#每台服务器最多重试次数，但是首次调用不包括在内
ribbon.MaxAutoRetries=0
#最多重试多少台服务器
ribbon.MaxAutoRetriesNextServer=2

###hystrix设置###

#hystrix超时设置
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=60000
#feing开启hystrix，使其能够通过hystrixcommand访问远端服务，并记录hystrix.stream
feign.hystrix.enabled=true


#sleuth设置
spring.zipkin.base-url=http://localhost:9144
#sleuth收集的频率0-1
spring.sleuth.sampler.percentage=1


#springboot admin配置
spring.boot.admin.client.url=http://localhost:8788
management.endpoints.web.exposure.include=*
management.info.git.mode=full